{
  float x=event.getX();
  float y=event.getY();
  int id=v.getId();
  if (id == R.id.surface_container) {
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
      mTouchingProgressBar=true;
    mDownX=x;
  mDownY=y;
mChangeVolume=false;
mChangePosition=false;
break;
case MotionEvent.ACTION_MOVE:
float deltaX=x - mDownX;
float deltaY=y - mDownY;
float absDeltaX=Math.abs(deltaX);
float absDeltaY=Math.abs(deltaY);
if (mIfCurrentIsFullscreen) {
if (!mChangePosition && !mChangeVolume) {
if (absDeltaX > mThreshold || absDeltaY > mThreshold) {
cancelProgressTimer();
if (absDeltaX >= mThreshold) {
mChangePosition=true;
mDownPosition=getCurrentPositionWhenPlaying();
if (JC_BURIED_POINT != null && JCMediaManager.instance().listener == this) {
JC_BURIED_POINT.onTouchScreenSeekPosition(mUrl,mObjects);
}
}
 else {
mChangeVolume=true;
mDownVolume=mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);
if (JC_BURIED_POINT != null && JCMediaManager.instance().listener == this) {
JC_BURIED_POINT.onTouchScreenSeekVolume(mUrl,mObjects);
}
}
}
}
}
if (mChangePosition) {
int totalTimeDuration=getDuration();
mSeekTimePosition=(int)(mDownPosition + deltaX * totalTimeDuration / mScreenWidth);
if (mSeekTimePosition > totalTimeDuration) mSeekTimePosition=totalTimeDuration;
String seekTime=JCUtils.stringForTime(mSeekTimePosition);
String totalTime=JCUtils.stringForTime(totalTimeDuration);
showProgressDialog(deltaX,seekTime,mSeekTimePosition,totalTime,totalTimeDuration);
}
if (mChangeVolume) {
showVolumDialog(-deltaY);
}
break;
case MotionEvent.ACTION_UP:
mTouchingProgressBar=false;
if (mProgressDialog != null) {
mProgressDialog.dismiss();
}
if (mVolumeDialog != null) {
mVolumeDialog.dismiss();
}
if (mChangePosition) {
JCMediaManager.instance().mediaPlayer.seekTo(mSeekTimePosition);
int duration=getDuration();
int progress=mSeekTimePosition * 100 / (duration == 0 ? 1 : duration);
progressBar.setProgress(progress);
}
startProgressTimer();
if (JC_BURIED_POINT != null && JCMediaManager.instance().listener == this) {
if (mIfCurrentIsFullscreen) {
JC_BURIED_POINT.onClickSeekbarFullscreen(mUrl,mObjects);
}
 else {
JC_BURIED_POINT.onClickSeekbar(mUrl,mObjects);
}
}
break;
}
}
 else if (id == R.id.progress) {
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
cancelProgressTimer();
ViewParent vpdown=getParent();
while (vpdown != null) {
vpdown.requestDisallowInterceptTouchEvent(true);
vpdown=vpdown.getParent();
}
break;
case MotionEvent.ACTION_UP:
startProgressTimer();
ViewParent vpup=getParent();
while (vpup != null) {
vpup.requestDisallowInterceptTouchEvent(false);
vpup=vpup.getParent();
}
break;
}
}
return false;
}
